######################################
### Improve code
* poly_to_pts can be done iterating row by row.
	Use clip_PolygonFile from cut_shapefile as model
	Way lower memory usage!!!
* Infer points with building="yes" as well?
######################################
### Issues
* Some regions are too isolated, and then few residential building exists. 
-> It's ok, but population count per building becomes way too high, probably because of errors during the estimation of the population count for that squared kilometer

* Residential points and polygon inferred as residential, might be the same ? Try with other dataset!

* When it comes to infer a polygon building use:
	Taking the smallest polygon with landuse!=NULL which contains it, and infer the use from it
	As well, add leisure!=NULL ? In this case, we know it is NOT for residential uses #TODO!

* Polygons which contain defined landuse and all other info. = NULL:
	Cannot know whether they define a zone or a building
	Very few of them are buildings, but there's nothing we can do without introducing errors, then we just let it this way

######################################
############################################################
*************************************************
From OSM: Calculate activities and residential points
*************************************************

Classification as described in OSM wiki (Key values)
- kiosk is considered as other building, since it is a small retail shop
- added hotel both in residential and commercial uses

Interesting: Use transportation tags in amenity key value
http://wiki.openstreetmap.org/wiki/Key:amenity
* Check in amenity/others which ones can be considered as activities as well

Null == ''

Key					Classif
----------------------------------------
leisure = Activities classif		Activity
amenity = *				Activity
shop = *				Activity

building =	Activities classif	Activity
		Residential classif	Residential

building=yes & landuse=	Activities	Activity
			Residential	Residential

building='' & landuse=	Activities	Serves for classifying polygons contained within them
			Residential	Serves for classifying polygons contained within them

building='yes'				-> Infer: Smallest polygon which contains the polygon with landuse!=NULL
building=''				All NULL values (couldn't be tagged before)? Not relevant information

####################
building = 'yes'

* Infer the use according to the smallest polygon within which it is contained, and has landuse!=NULL
	-> Pick its landuse
	If not possible: Remain as uncertain
		-> later defined as residential
	For all the residential buildings inferred: Filter those which compute a squared footage smaller than 12m2
		Sinusoidal projection used to calculate the area (given latitude,longitude pairs)
		http://www.tentcityurbanism.com/2014/09/navigating-minimum-square-footage.html
############################################################
### Output:
Note: A negative osm_id value indicates it was created during the osm2pgsql process (i.e. is not a .osm object)

* full_residential_pts:
Contain all the residential points, with its population count estimation using the [gpw-v4-population-count-adjusted-to-2015-unwpp-country-totals-2000] dataset

* full_activities_pts:
Contain all the activities points. 
Attributes: [osm_id, key, value]
	Keys: From the osm_wiki, converted to the mapping as in classif_uses:
Originally: 'shop','amenity','leisure','building','landuse','inferred'
    -> Pick those values for the keys ['building','landuse','inferred'] and join it to the respective categories
After mapping: 'shop', 'leisure/amenity', 'commercial/industrial'

############################################################

Public transport from OSM:

lines:
"route"="train"
OR"route"="light_rail"
OR"route"="subway"
OR"route"="tram"
OR"route"="bus"
OR"route"="monorail"
OR"route"="trolleybus"
OR"route"="ferry"

points:
"railway"="tram_stop"OR"highway"="bus_stop"











